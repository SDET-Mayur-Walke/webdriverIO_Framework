name: Daily UI/API Test Run

on:
  workflow_dispatch: # Allows manual triggering from GitHub Actions tab
  schedule:
    # The cron schedule is defined in UTC.
    # '30 5 * * *' means at 05:30 UTC every day.
    # For Akola, Maharashtra, India (IST, which is UTC+5:30), 05:30 UTC is 11:00 AM IST.
    # Adjust this cron expression if you prefer a different daily execution time.
    # You can use crontab.guru to help generate cron expressions.
    - cron: '30 5 * * *'

jobs:
  run-tests:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner, which is suitable for Node.js projects

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Action to clone your repository into the runner environment

      - name: Set up Node.js
        uses: actions/setup-node@v4 # Action to set up the Node.js environment
        with:
          node-version: '22' # Set to Node.js version 22, based on your local environment (v22.17.1)

      - name: Install dependencies
        run: npm install # Install project dependencies as defined in package.json

      - name: Create .env file with secrets
        # This is a critical step for securely managing credentials.
        # These environment variables (RUDDERSTACK_USERNAME, RUDDERSTACK_PASSWORD, RUDDERSTACK_BASE_URL)
        # MUST be configured as GitHub Repository Secrets in your GitHub repo settings:
        # Settings > Secrets and variables > Actions > New repository secret.
        run: |
          echo "RUDDERSTACK_USERNAME=${{ secrets.RUDDERSTACK_USERNAME }}" > .env
          echo "RUDDERSTACK_PASSWORD=${{ secrets.RUDDERSTACK_PASSWORD }}" >> .env
          echo "RUDDERSTACK_BASE_URL=${{ secrets.RUDDERSTACK_BASE_URL || 'https://app.rudderstack.com' }}" >> .env
        env:
          # These are listed here for clarity, but their values come from GitHub Secrets.
          RUDDERSTACK_USERNAME: ${{ secrets.RUDDERSTACK_USERNAME }}
          RUDDERSTACK_PASSWORD: ${{ secrets.RUDDERSTACK_PASSWORD }}
          RUDDERSTACK_BASE_URL: ${{ secrets.RUDDERSTACK_BASE_URL }} # Optional: only if you're using a custom base URL

      - name: Run WebdriverIO Tests
        run: npx wdio --host localhost # Execute your WebdriverIO tests. --host localhost is often necessary in CI.

      - name: Upload Allure Report Results
        if: always() # This ensures the artifact is uploaded even if tests fail
        uses: actions/upload-artifact@v4
        with:
          name: allure-results # Name of the artifact
          path: allure-results # Path to the Allure results directory generated by your tests
          retention-days: 7 # How long to keep the artifact (e.g., 7 days)